{"version":3,"sources":["components/api/api.js","components/table/BaseInfoTable.jsx","components/table/common/TableCellWithField.jsx","components/table/MainTable.jsx","components/table/TotalTable.jsx","components/table/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","require","onGet","reply","gasTemp","id","value","gasPress","useStyles","makeStyles","theme","root","tableBorder","border","borderColor","borderStyle","BaseInfoTable","classes","fieldArr","Table","TableBody","TableRow","TableCell","component","className","align","colSpan","Typography","variant","gutterBottom","rowSpan","TextField","defaultValue","style","width","multiline","rows","map","row","cell","TableCellWithField","size","colspan","rowspan","MainTable","props","data","useContext","StateContext","item","inputProps","padding","textAlign","fontSize","TotalTable","localeMap","ru","ruLocale","React","createContext","Header","useState","Date","setValue","shift","setShift","state","setState","fetchData","a","get","response","LocalizationProvider","dateAdapter","DateAdapter","locale","Provider","Paper","display","alignSelf","elevation","sx","Stack","direction","spacing","InputProps","readOnly","DesktopDatePicker","minDate","onChange","newValue","renderInput","params","FormControl","m","minWidth","Select","event","target","displayEmpty","MenuItem","Button","onClick","toLocaleDateString","App","TableContainer","maxHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04a0119c.chunk.js","sourcesContent":["export var axios = require('axios')\r\nvar MockAdapter = require('axios-mock-adapter')\r\n\r\nvar mock = new MockAdapter(axios)\r\n\r\nmock.onGet('/data').reply(200, {\r\n  gasTemp: [\r\n    //информация о температуре газа\r\n    { id: 1, value: 29 },\r\n    { id: 2, value: 31 },\r\n    { id: 3, value: 26 },\r\n    { id: 4, value: 26 },\r\n    { id: 5, value: 28 },\r\n    { id: 6, value: 0 },\r\n  ],\r\n  gasPress: [\r\n    //информация о давлении газа\r\n    { id: 1, value: 1900 },\r\n    { id: 3, value: 1900 },\r\n  ],\r\n})\r\n\r\nexport const mockAPI = {\r\n  // запрос на получение данных\r\n  getData() {\r\n    return axios.get('/data').then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport { TableCellWithField } from './common/TableCellWithField'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { TextField } from '@mui/material'\r\nimport Typography from '@mui/material/Typography'\r\n\r\n//Nested in Header\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  tableBorder: {\r\n    border: 1,\r\n    borderColor: 'black',\r\n    borderStyle: 'solid',\r\n  },\r\n}))\r\n\r\nexport const BaseInfoTable = () => {\r\n  const classes = useStyles() //обращаться к классам стилей\r\n\r\n  const fieldArr = [1, 2, 3, 4] //массив просто для отображения столбцов, т.к. данные в API не прописаны\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={7}>\r\n            <Typography variant='h6' gutterBottom component='p'>\r\n              Общая информация\r\n            </Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={4}>\r\n            <b>Отгрузка готового продукта </b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' rowSpan={3}>\r\n            <b>Время обработки цеха службами УТ</b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>УРСБ</b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b> Химия</b>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>Продукт</b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>№ цистерн/ж.д. ваг.</b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>Назначение</b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>Шт/Тонны</b>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} rowSpan={2}>\r\n            <TextField defaultValue={null}></TextField>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} rowSpan={2}>\r\n            <TextField defaultValue={null}></TextField>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCell component={'th'} className={classes.tableBorder} rowSpan={6} align='center'>\r\n            <b>Замечания по работе цеха</b>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} colSpan={2} rowSpan={6}>\r\n            <TextField style={{ width: '100%' }} multiline rows={15} defaultValue='' />\r\n          </TableCell>\r\n        </TableRow>\r\n        {/* отрисовка пустых столбцов, которые в дальнейшем могут быть заполнены при готовом API */}\r\n        {fieldArr.map((row) => (\r\n          <TableRow>\r\n            {fieldArr.map((cell) => (\r\n              <TableCellWithField value={null} />\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","import TableCell from '@mui/material/TableCell'\r\nimport TextField from '@mui/material/TextField'\r\nimport { useStyles } from '../BaseInfoTable'\r\n\r\n//table cell with text field and border style\r\nexport const TableCellWithField = ({ size = 'small', value, colspan = 1, rowspan = 1 }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableCell className={classes.tableBorder}>\r\n      <TextField style={{ width: '100%' }} size={size} defaultValue={value} colSpan={colspan} rowSpan={rowspan} />\r\n    </TableCell>\r\n  )\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport { TableCellWithField } from './common/TableCellWithField'\r\nimport { useStyles } from './BaseInfoTable'\r\nimport { TextField } from '@mui/material'\r\nimport Typography from '@mui/material/Typography'\r\nimport { useContext } from 'react'\r\nimport { StateContext } from './Header'\r\n\r\n//Nested in Header\r\n\r\n// отрисовываю пустые столбцы если данные по какой-то причине не пришли, чтобы таблица визуально была полной даже незаполненная\r\n\r\nexport const MainTable = (props) => {\r\n  const classes = useStyles() //стили для таблицы\r\n  const data = useContext(StateContext) //получение данных из контекста\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell className={classes.tableBorder} rowSpan={3} align='center'>\r\n            <Typography variant='h6' gutterBottom component='p'>\r\n              Первичное охлаждение и машинный зал\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>ПГХ</b>\r\n          </TableCell>\r\n          {/* если данные есть, тогда отобажать их в стобцах */}\r\n          {data !== null ? (\r\n            data.gasTemp.map((item) => (\r\n              <TableCell className={classes.tableBorder} align='center' key={item.id}>\r\n                {item.id}\r\n              </TableCell>\r\n            ))\r\n          ) : (\r\n            // если данных нет - отрисовать пустые столбцы\r\n            <>\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n            </>\r\n          )}\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' rowSpan={2}>\r\n            <b>Давление газа после эксгаустеров мм.вод.ст.</b>\r\n          </TableCell>\r\n\r\n          {/* если данные о давл. газа есть, тогда отобажать их в стобцах */}\r\n          {data !== null ? (\r\n            data.gasPress.map((item) => <TableCellWithField value={item.id} key={item.id} />)\r\n          ) : (\r\n            // если данных нет - отрисовать пустые столбцы\r\n            <>\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n            </>\r\n          )}\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>сопротивление пгх</b>\r\n          </TableCell>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>t газа после ПГХ, ºC</b>\r\n          </TableCell>\r\n          {/* если данные темп. газа(вторая строка) есть, тогда отобажать их в стобцах */}\r\n          {data !== null ? (\r\n            data.gasTemp.map((item) => <TableCellWithField value={item.value} key={item.id} />)\r\n          ) : (\r\n            // если данных нет - отрисовать пустые столбцы\r\n            <>\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n            </>\r\n          )}\r\n          {/* если данные о давл. газа(вторая строка) есть, тогда отобажать их в стобцах */}\r\n          {data !== null ? (\r\n            data.gasPress.map((item) => (\r\n              <TableCell className={classes.tableBorder}>\r\n                {/* поле без отступов чтобы большое число давления влезло */}\r\n                <TextField\r\n                  inputProps={{\r\n                    style: {\r\n                      padding: 5,\r\n                    },\r\n                  }}\r\n                  size='small'\r\n                  defaultValue={item.value}\r\n                  key={item.id}\r\n                />\r\n              </TableCell>\r\n            ))\r\n          ) : (\r\n            // если данных нет - отрисовать пустые столбцы\r\n            <>\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n            </>\r\n          )}\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            <b>сопротивление газопровода</b>\r\n          </TableCell>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={2}>\r\n            <b>\r\n              ПГХ Расход воды на первич. охл-е, м<sup>3</sup>/ч\r\n            </b>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} colSpan={3}>\r\n            <TextField inputProps={{ style: { textAlign: 'center' } }} style={{ width: '40%' }} defaultValue={null}></TextField>\r\n            {<span style={{ fontSize: '40px', padding: '0 10px' }}>/</span>}\r\n            <TextField inputProps={{ style: { textAlign: 'center' } }} style={{ width: '40%' }} defaultValue={null}></TextField>\r\n          </TableCell>\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={2}>\r\n            <b> ПГХ t воды на первич. охл-е, ºC</b>\r\n          </TableCell>\r\n          <TableCellWithField value={null} />\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={2}>\r\n            <b>ПГХ t воды после первич. охл-я, ºC</b>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} colSpan={3}>\r\n            <TextField defaultValue={null}></TextField>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport { TableCellWithField } from './common/TableCellWithField'\r\nimport { TextField } from '@mui/material'\r\nimport { useStyles } from './BaseInfoTable'\r\nimport Typography from '@mui/material/Typography'\r\n\r\n//Nested in Header\r\nexport const TotalTable = () => {\r\n  const classes = useStyles() //стили для таблицы\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell align='center' rowSpan='3'>\r\n            <Typography variant='button' gutterBottom component='div'>\r\n              Выполнено за смену\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} rowSpan={3}>\r\n            <TextField style={{ width: '100%' }} multiline rows={7} defaultValue='' />\r\n          </TableCell>\r\n          <TableCell align='center'>\r\n            <Typography variant='button' gutterBottom component='div'>\r\n              Смену сдал\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCellWithField />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align='center'>\r\n            <Typography variant='button' gutterBottom component='div'>\r\n              Смену принял\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCellWithField />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align='center'>\r\n            <Typography variant='button' gutterBottom component='div'>\r\n              Начальник цеха\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCellWithField />\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport { Button, FormControl, MenuItem, Paper, Select, Stack, TextField } from '@mui/material'\r\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab'\r\nimport DateAdapter from '@mui/lab/AdapterDateFns'\r\nimport ruLocale from 'date-fns/locale/ru'\r\nimport React, { useState } from 'react'\r\nimport { axios } from './../api/api'\r\nimport { MainTable } from './MainTable'\r\nimport { BaseInfoTable } from './BaseInfoTable'\r\nimport { TotalTable } from './TotalTable'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst localeMap = {\r\n  //карта местности для провайдера даты\r\n  ru: ruLocale,\r\n}\r\nexport const StateContext = React.createContext() //создание контекста\r\n\r\nexport const Header = () => {\r\n  const [value, setValue] = useState(new Date()) //состояние для календаря\r\n  const [shift, setShift] = useState('Смена 1') //состояние для 'смены'\r\n  const [state, setState] = useState(null) //данные с сервера\r\n\r\n  //запросить данные и получить результат в state при нажатии на кнопку\r\n  const fetchData = async () => {\r\n    const response = await axios.get('/data')\r\n    setState({ ...response.data })\r\n  }\r\n\r\n  //обработчик для изменения рабочей смены\r\n  const handleChange = (event) => {\r\n    setShift(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={DateAdapter} locale={localeMap.ru}>\r\n      {/* провайдер для даты */}\r\n      <StateContext.Provider value={state}>\r\n        {/* контекст со значением state */}\r\n        <Table>\r\n          <Paper style={{ display: 'flex', alignSelf: 'center' }} elevation={1} sx={{ width: '100%' }}>\r\n            <Stack direction='row' spacing={2} style={{ padding: '15px' }}>\r\n              <TextField\r\n                style={{ width: '55%' }}\r\n                id='outlined-read-only-input'\r\n                defaultValue='Сменный рапорт. ЦПХП №1.'\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n              <DesktopDatePicker\r\n                id='date-picker'\r\n                value={value}\r\n                minDate={new Date('2017-01-01')}\r\n                onChange={(newValue) => {\r\n                  setValue(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n              <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                <Select value={shift} onChange={handleChange} displayEmpty inputProps={{ 'aria-label': 'Without label' }}>\r\n                  <MenuItem value={'Смена 1'}>Смена 1</MenuItem>\r\n                  <MenuItem value={'Смена 2'}>Смена 2</MenuItem>\r\n                  <MenuItem value={'Смена 3'}>Смена 3</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {/* при клике на кнопку происходит запрос данных */}\r\n              <Button style={{ width: '20%' }} variant='outlined' onClick={fetchData}>\r\n                Просмотр\r\n              </Button>\r\n            </Stack>\r\n          </Paper>\r\n          <Stack direction='row' spacing={2}>\r\n            {/* <TextField\r\n              style={{ width: '37em', padding: '10px' }}\r\n              id='outlined-read-only-input'\r\n              value={textValue}\r\n              variant='filled'\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            /> */}\r\n            <Typography variant='subtitle1' gutterBottom component='p' style={{ padding: '10px', alignSelf: 'center' }}>\r\n              ЦПХП №1. Суточный рапорт за {value.toLocaleDateString('ru-RU')} <b style={{ padding: '0 10px' }}>{shift}</b> Сменный\r\n              мастер:\r\n            </Typography>\r\n\r\n            <TextField style={{ padding: '10px' }} />\r\n          </Stack>\r\n        </Table>\r\n        <MainTable /> {/* основная таблица(первичное охлаждение) */}\r\n        <BaseInfoTable /> {/* таблица с общей информацией */}\r\n        <TotalTable /> {/* завершающая таблица */}\r\n      </StateContext.Provider>\r\n    </LocalizationProvider>\r\n  )\r\n}\r\n","import './App.css'\r\nimport Paper from '@mui/material/Paper'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport { Header } from './components/table/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Paper sx={{ minWidth: '1200px' }}>\r\n        <TableContainer sx={{ maxHeight: 1840 }}>\r\n          <Header />\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}