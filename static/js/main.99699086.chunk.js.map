{"version":3,"sources":["components/api/api.js","components/table/BaseInfoTable.jsx","components/table/common/TableCellWithField.jsx","components/table/TotalTable.jsx","components/table/Header.jsx","components/table/MainTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","require","onGet","reply","gasTemp","id","value","gasPress","useStyles","makeStyles","theme","root","tableBorder","border","borderColor","borderStyle","BaseInfoTable","classes","fieldArr","Table","TableBody","TableRow","TableCell","component","className","align","colSpan","rowSpan","TextField","defaultValue","style","width","multiline","rows","map","row","cell","TableCellWithField","size","colspan","rowspan","TotalTable","localeMap","ru","ruLocale","StateContext","React","createContext","Header","useState","Date","setValue","shift","setShift","state","setState","textValue","toLocaleDateString","console","log","fetchData","a","get","response","data","LocalizationProvider","dateAdapter","DateAdapter","locale","Provider","Paper","padding","display","alignSelf","elevation","sx","Stack","direction","spacing","InputProps","readOnly","DesktopDatePicker","minDate","onChange","newValue","renderInput","params","FormControl","m","minWidth","Select","event","target","displayEmpty","inputProps","MenuItem","Button","variant","onClick","MainTable","props","useContext","item","textAlign","fontSize","App","TableContainer","maxHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99699086.chunk.js","sourcesContent":["export var axios = require('axios')\r\nvar MockAdapter = require('axios-mock-adapter')\r\n\r\n// This sets the mock adapter on the default instance\r\nvar mock = new MockAdapter(axios)\r\n\r\n// Mock any GET request to /users\r\n// arguments for reply are (status, data, headers)\r\nmock.onGet('/data').reply(200, {\r\n  gasTemp: [\r\n    { id: 1, value: 29 },\r\n    { id: 2, value: 31 },\r\n    { id: 3, value: 26 },\r\n    { id: 4, value: 26 },\r\n    { id: 5, value: 28 },\r\n    { id: 6, value: 0 },\r\n  ],\r\n  gasPress: [\r\n    { id: 1, value: 1900 },\r\n    { id: 3, value: 1900 },\r\n  ],\r\n})\r\n\r\nexport const mockAPI = {\r\n  getData() {\r\n    return axios.get('/data').then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport { TableCellWithField } from './common/TableCellWithField'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { TextField } from '@mui/material'\r\n\r\n//Nested in Header\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  tableBorder: {\r\n    border: 1,\r\n    // borderRightWidth: 1,\r\n    borderColor: 'black',\r\n    borderStyle: 'solid',\r\n  },\r\n}))\r\n\r\nexport const BaseInfoTable = () => {\r\n  const classes = useStyles()\r\n\r\n  const fieldArr = [1, 2, 3, 4]\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={7}>\r\n            <b>Общая информация</b>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={4}>\r\n            Отгрузка готового продукта\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' rowSpan={3}>\r\n            Время обработки цеха службами УТ\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            УРСБ\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            Химия\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            Продукт\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            № цистерн/ж.д. ваг.\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            Назначение\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            Шт/Тонны\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} rowSpan={2}>\r\n            <TextField defaultValue={null}></TextField>\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} rowSpan={2}>\r\n            <TextField defaultValue={null}></TextField>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n          <TableCell component={'th'} className={classes.tableBorder} rowSpan={6} align='center'>\r\n            Замечания по работе цеха\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} colSpan={2} rowSpan={6}>\r\n            <TextField style={{ width: '100%' }} multiline rows={15} defaultValue='' />\r\n          </TableCell>\r\n        </TableRow>\r\n        {fieldArr.map((row) => (\r\n          <TableRow>\r\n            {fieldArr.map((cell) => (\r\n              <TableCellWithField value={null} />\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","import TableCell from '@mui/material/TableCell'\r\nimport TextField from '@mui/material/TextField'\r\nimport { useStyles } from '../BaseInfoTable'\r\n\r\n//table cell with text field and border style\r\nexport const TableCellWithField = ({ size = 'small', value, colspan = 1, rowspan = 1 }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableCell className={classes.tableBorder}>\r\n      <TextField style={{ width: '100%' }} size={size} defaultValue={value} colSpan={colspan} rowSpan={rowspan} />\r\n    </TableCell>\r\n  )\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport { TableCellWithField } from './common/TableCellWithField'\r\nimport { TextField } from '@mui/material'\r\nimport { useStyles } from './BaseInfoTable'\r\n\r\n//Nested in Header\r\nexport const TotalTable = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell align='center' rowSpan='3'>\r\n            Выполнено за смену\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} rowSpan={3}>\r\n            <TextField style={{ width: '100%' }} multiline rows={7} defaultValue='' />\r\n          </TableCell>\r\n          <TableCell align='center'>Смену сдал</TableCell>\r\n          <TableCellWithField />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align='center'>Смену принял</TableCell>\r\n          <TableCellWithField />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align='center'>Начальник цеха</TableCell>\r\n          <TableCellWithField />\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { Button, FormControl, MenuItem, Paper, Select, Stack, TextField } from '@mui/material'\r\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab'\r\nimport DateAdapter from '@mui/lab/AdapterDateFns'\r\nimport ruLocale from 'date-fns/locale/ru'\r\nimport React, { useState } from 'react'\r\nimport { axios } from './../api/api'\r\nimport { MainTable } from './MainTable'\r\nimport { BaseInfoTable } from './BaseInfoTable'\r\nimport { TotalTable } from './TotalTable'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  tableBorder: {\r\n    border: 1,\r\n    // borderRightWidth: 1,\r\n    borderColor: 'black',\r\n    borderStyle: 'solid',\r\n  },\r\n}))\r\nconst localeMap = {\r\n  ru: ruLocale,\r\n}\r\nexport const StateContext = React.createContext()\r\n\r\nexport const Header = () => {\r\n  const [value, setValue] = useState(new Date()) //состояние для календаря\r\n  const [shift, setShift] = useState('Смена 1') //состояние для 'смены'\r\n  const [state, setState] = useState(null) //данные с сервера\r\n  let textValue = `ЦПХП №1. Суточный рапорт за ${value.toLocaleDateString('ru-RU')} ${shift} Сменный мастер:`\r\n  console.log(shift)\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios.get('/data')\r\n    setState({ ...response.data })\r\n  }\r\n  const handleChange = (event) => {\r\n    setShift(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={DateAdapter} locale={localeMap.ru}>\r\n      <StateContext.Provider value={state}>\r\n        <Table>\r\n          <Paper style={{ padding: '20px', display: 'flex', alignSelf: 'center' }} elevation={1} sx={{ width: '100%' }}>\r\n            <Stack direction='row' spacing={2}>\r\n              <TextField\r\n                style={{ width: '55%' }}\r\n                id='outlined-read-only-input'\r\n                defaultValue='Сменный рапорт. ЦПХП №1.'\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n              <DesktopDatePicker\r\n                id='date-picker'\r\n                value={value}\r\n                minDate={new Date('2017-01-01')}\r\n                onChange={(newValue) => {\r\n                  setValue(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n              <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                <Select value={shift} onChange={handleChange} displayEmpty inputProps={{ 'aria-label': 'Without label' }}>\r\n                  <MenuItem value={'Смена 1'}>Смена 1</MenuItem>\r\n                  <MenuItem value={'Смена 2'}>Смена 2</MenuItem>\r\n                  <MenuItem value={'Смена 3'}>Смена 3</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Button style={{ width: '20%' }} variant='outlined' onClick={fetchData}>\r\n                Просмотр\r\n              </Button>\r\n            </Stack>\r\n          </Paper>\r\n          <Stack direction='row' spacing={2}>\r\n            <TextField\r\n              style={{ width: '35em' }}\r\n              id='outlined-read-only-input'\r\n              value={textValue}\r\n              variant='filled'\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <TextField />\r\n          </Stack>\r\n        </Table>\r\n        <MainTable /> {/* основная таблица */}\r\n        <BaseInfoTable /> {/* таблица с общей информацией */}\r\n        <TotalTable /> {/* завершающая таблица */}\r\n      </StateContext.Provider>\r\n    </LocalizationProvider>\r\n  )\r\n}\r\n","import Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport { TableCellWithField } from './common/TableCellWithField'\r\nimport { useStyles } from './BaseInfoTable'\r\nimport { TextField } from '@mui/material'\r\nimport { useContext } from 'react'\r\nimport { StateContext } from './Header'\r\n\r\n//Nested in Header\r\nexport const MainTable = (props) => {\r\n  const classes = useStyles()\r\n  const data = useContext(StateContext)\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell className={classes.tableBorder} rowSpan={3} align='center'>\r\n            <b>Первичное охлаждение и машинный зал</b>\r\n          </TableCell>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            ПГХ\r\n          </TableCell>\r\n          {data !== null ? (\r\n            data.gasTemp.map((item) => (\r\n              <TableCell className={classes.tableBorder} align='center' key={item.id}>\r\n                {item.id}\r\n              </TableCell>\r\n            ))\r\n          ) : (\r\n            <>\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n              <TableCell className={classes.tableBorder} />\r\n            </>\r\n          )}\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' rowSpan={2}>\r\n            Давление газа после эксгаустеров мм.вод.ст.\r\n          </TableCell>\r\n\r\n          {data !== null ? (\r\n            data.gasPress.map((item) => <TableCellWithField value={item.id} key={item.id} />)\r\n          ) : (\r\n            <>\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n            </>\r\n          )}\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            сопротивление пгх\r\n          </TableCell>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            t газа после ПГХ, ºC\r\n          </TableCell>\r\n\r\n          {data !== null ? (\r\n            data.gasTemp.map((item) => <TableCellWithField value={item.value} key={item.id} />)\r\n          ) : (\r\n            <>\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n            </>\r\n          )}\r\n\r\n          {data !== null ? (\r\n            data.gasPress.map((item) => <TableCellWithField value={item.value} key={item.id} />)\r\n          ) : (\r\n            <>\r\n              <TableCellWithField value={null} />\r\n              <TableCellWithField value={null} />\r\n            </>\r\n          )}\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center'>\r\n            сопротивление газопровода\r\n          </TableCell>\r\n          <TableCellWithField value={null} />\r\n          <TableCellWithField value={null} />\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={2}>\r\n            ПГХ Расход воды на первич. охл-е, м<sup>3</sup>/ч\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} colSpan={3}>\r\n            <TextField inputProps={{ style: { textAlign: 'center' } }} style={{ width: '40%' }} defaultValue={null}></TextField>\r\n            {<span style={{ fontSize: '40px', padding: '0 10px' }}>/</span>}\r\n            <TextField inputProps={{ style: { textAlign: 'center' } }} style={{ width: '40%' }} defaultValue={null}></TextField>\r\n          </TableCell>\r\n\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={2}>\r\n            ПГХ t воды на первич. охл-е, ºC\r\n          </TableCell>\r\n          <TableCellWithField value={null} />\r\n          <TableCell component={'th'} className={classes.tableBorder} align='center' colSpan={2}>\r\n            ПГХ t воды после первич. охл-я, ºC\r\n          </TableCell>\r\n          <TableCell className={classes.tableBorder} colSpan={3}>\r\n            <TextField defaultValue={null}></TextField>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\n","import './App.css'\r\nimport Paper from '@mui/material/Paper'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport { useEffect, useState } from 'react'\r\nimport { axios } from './components/api/api'\r\nimport { MainTable } from './components/table/MainTable'\r\nimport { BaseInfoTable } from './components/table/BaseInfoTable'\r\nimport { TotalTable } from './components/table/TotalTable'\r\nimport { Header } from './components/table/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Paper sx={{ width: '100%' }}>\r\n        <TableContainer sx={{ maxHeight: 1840 }}>\r\n          <Header />\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}